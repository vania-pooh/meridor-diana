/***********************************************************
 * DO NOT EDIT THIS FILE - IT WAS GENERATED AUTOMATICALLY. *
 ***********************************************************/
package ru.meridor.diana.db.tables

import scala.slick.driver.PostgresDriver.simple._
import java.sql.Timestamp

object Tasks extends Table[(Long, Timestamp, Timestamp, String, Int, Int, Int, Int, Double, Timestamp)]("tasks") {
  def taskId = column[Long]("task_id", O.NotNull, O.AutoInc)
  def startDate = column[Timestamp]("start_date", O.NotNull)
  def endDate = column[Timestamp]("end_date")
  def description = column[String]("description", O.NotNull)
  def categoryId = column[Int]("category_id", O.NotNull)
  def priorityId = column[Int]("priority_id", O.NotNull)
  def statusId = column[Int]("status_id", O.NotNull)
  def paidAmount = column[Int]("paid_amount", O.NotNull)
  def duration = column[Double]("duration")
  def created = column[Timestamp]("created", O.NotNull)
  def * = taskId ~ startDate ~ endDate ~ description ~ categoryId ~ priorityId ~ statusId ~ paidAmount ~ duration ~ created
  def withAutoInc = startDate ~ endDate ~ description ~ categoryId ~ priorityId ~ statusId ~ paidAmount ~ duration ~ created returning taskId
  def onlyRequired = taskId ~ startDate ~ endDate.? ~ description ~ categoryId ~ priorityId ~ statusId ~ paidAmount ~ duration.? ~ created
  def pk = primaryKey("tasks_pkey", (taskId))
  def fkTasksTaskPriorities = foreignKey("fk_tasks_task_priorities", (priorityId), TaskPriorities)(t => (t.priorityId))
  def fkTasksTaskStatuses = foreignKey("fk_tasks_task_statuses", (statusId), TaskStatuses)(t => (t.statusId))
  def fkTasksTaskCategories = foreignKey("fk_tasks_task_categories", (categoryId), TaskCategories)(t => (t.categoryId))
  def idxTasksTaskStatuses = index("idx_tasks_task_statuses", (statusId))
  def idxTasksTaskCategories = index("idx_tasks_task_categories", (categoryId))
  def tasksPkey = index("tasks_pkey", (taskId), unique = true)
  def idxTasksTaskPriorities = index("idx_tasks_task_priorities", (priorityId))
}
