/***********************************************************
 * DO NOT EDIT THIS FILE - IT WAS GENERATED AUTOMATICALLY. *
 ***********************************************************/

import scala.slick.driver.PostgresDriver.simple._
import java.sql.Timestamp

object Contacts extends Table[(Long, Timestamp, Int, Timestamp)]("contacts") {
  def contactId = column[Long]("contact_id", O.NotNull, O.AutoInc)
  def contactType = column[Timestamp]("contact_type", O.NotNull)
  def numRequests = column[Int]("num_requests", O.NotNull)
  def created = column[Timestamp]("created", O.NotNull)
  def * = contactId ~ contactType ~ numRequests ~ created
  def fkRequestsClients = foreignKey("fk_requests_clients", (contactId), Requests)(t => (t.clientId))
  def fkUsersContacts = foreignKey("fk_users_contacts", (contactId), Users)(t => (t.contactId))
  def fkRequestsExecutors = foreignKey("fk_requests_executors", (contactId), Requests)(t => (t.executorId))
  def fkPersonsContacts = foreignKey("fk_persons_contacts", (contactId), Persons)(t => (t.contactId))
  def fkOrganizationsContacts = foreignKey("fk_organizations_contacts", (contactId), Organizations)(t => (t.contactId))
  def contactsPkey = index("contacts_pkey", (contactId), unique = true)
}
